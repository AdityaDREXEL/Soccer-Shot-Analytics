{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;\f2\fswiss\fcharset0 Helvetica-Light;
}
{\colortbl;\red255\green255\blue255;\red25\green28\blue31;\red255\green255\blue255;\red25\green28\blue31;
\red255\green255\blue255;\red25\green28\blue31;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c13018\c14594\c16114;\cssrgb\c100000\c100000\c99971\c0;\cssrgb\c13043\c14622\c16126;
\cssrgb\c100000\c100000\c100000\c0;\cssrgb\c12941\c14510\c16078;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ## Soccer Shots Analysis\
\
This Python script is designed to scrape and analyze soccer shot data from the SofaScore website using the SofaScore API. It provides insights into shots taken during specific matches and visualizes player-specific shot data.\
\
## Prerequisites\
\
Ensure that you have the required Python packages installed:\
\
pip install requests beautifulsoup4 pandas numpy matplotlib mplsoccer\
\
\pard\pardeftab720\sa120\partightenfactor0

\f1\b \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is xG and xGot?
\f0\b0 \cf4 \cb5 \strokec4 \
\pard\pardeftab720\sa240\partightenfactor0
\cf4 Stats Perform\'92s expected goals on target (xGOT) builds upon the original expected goals model (xG) by crediting on-target shots based on a combination of their underlying chance quality and the quality of their execution.
\f2\fs37\fsmilli18667 \cf6 \cb7 \strokec6 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
## How to Use\
\
1. Clone the repository or download the script file.\
2. Run the script using a Python interpreter.\
3. Follow the prompts to enter match numbers and player names.\
4. View the scraped shot data and visualizations.\
\
## Code Structure\
\
The script consists of the following sections:\
\
1. Scraping SofaScore API:\
   - Uses the `requests` library to fetch shot data for specific matches from the SofaScore API.\
   - Extracts relevant information such as player name, shot type, situation, coordinates, xG, and more.\
\
2. Creating DataFrames:\
   - Utilizes the `pandas` library to organize the scraped shot data into structured DataFrames.\
   - Displays the DataFrame containing shot details for each match.\
\
3. Visualizing Shot Data:\
   - Integrates the `mplsoccer` library to visualize shots on a soccer pitch.\
   - Allows users to input a player's name and displays a pitch plot with different shot types color-coded.\
\
4. Additional Analysis:\
   - Computes and visualizes average xG and xGOT for players.\
   - Ranks players based on xG and xGOT, displaying top players in horizontal bar charts.\
\
## Customization\
\
Feel free to customize the script for your specific needs. You can adjust the match numbers, explore additional player statistics, or modify visualization parameters.\
\
## Acknowledgments\
\
- [SofaScore API](https://www.sofascore.com/)\
- Libraries used: `requests`, `beautifulsoup4`, `pandas`, `numpy`, `matplotlib`, `mplsoccer`\
\
## License\
\
Not authorised by the website to share data.\
\
## Notes\
\
- Ensure compliance with SofaScore's terms of service and API usage policies.\
- This script is intended for educational and analytical purposes.}